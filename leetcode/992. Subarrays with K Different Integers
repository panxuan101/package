class Solution {
    public int subarraysWithKDistinct(int[] A, int K) {
        if (A == null || A.length == 0) return 0;
        
        Map<Integer, Integer> map = new HashMap<>();
        int res = 0;
        int count = 0;
        int l = 0, r = 0, max = 0;
        while (r < A.length) {
            map.put(A[r], map.getOrDefault(A[r], 0) + 1);
            if (map.get(A[r]) == 1) count++;
            if (count == K) {
                max = r;
                while (max + 1 < A.length) {
                    if (map.getOrDefault(A[max + 1], 0) == 0) break;
                    max++;
                }
            } 
            while (count == K) {
                res += max - r + 1;
                map.put(A[l], map.get(A[l]) - 1);
                if (map.get(A[l]) == 0) {
                    count--;
                }
                l++;
            }
            r++;
        }
        return res;
    }
}
