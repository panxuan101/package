class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
       
        int[] indegree =new int[numCourses];
        int[] res=new int[numCourses];
        int k=0;
        for(int[] pair:prerequisites){  //初始化
            indegree[pair[0]]++;
        }
        Queue<Integer> queue=new LinkedList<>();
        for(int i=0; i< indegree.length; i++){
            if(indegree[i]==0){         //放入无先修课的课程
                queue.offer(i);
                res[k++]=i;
            }
        }
        while(!queue.isEmpty()){
            int pre=queue.poll();
            for(int[] pair:prerequisites){
                if(pair[1]==pre){
                    indegree[pair[0]]--;
                    
                    if(indegree[pair[0]]==0){
                        queue.offer(pair[0]);
                        res[k++]=pair[0];
                    }
                }
            }
        }
        return (k ==numCourses) ? res : new int[0];
    }
}
