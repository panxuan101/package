/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findDistance(TreeNode root, int p, int q) {
        TreeNode lca=LCA(root, p, q);
        return dist(lca,p,0)+dist(lca,q,0);
    }
    private int dist(TreeNode root, int num, int res){
        if(root == null) return -1;
        if(root.val == num) return res;
        int travelLeft = dist(root.left,num,res+1);
        if(travelLeft == -1){
            return dist(root.right, num, res + 1);
        }
        
        return travelLeft;
        }
    
    private TreeNode LCA(TreeNode root, int p, int q) {
         if(root==null || root.val==p ||root.val==q) return root; 
        
        TreeNode left=LCA(root.left,p,q);
        TreeNode right=LCA(root.right,p,q);
        
        if(left !=null && right !=null){
            return root;
        }
       
        return left==null ? right:left;  
    }
}
