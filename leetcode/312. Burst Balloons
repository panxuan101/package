class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length;
        int[] array = new int[n+2];     //左边右边需要各加1
        for(int i = 0; i < n; i++){
            array[i+1] = nums[i];
        }
        array[0] = array[n+1] = 1;
        int[][] dp = new int[n+2][n+2];
        return helper(1,n,array,dp);
    }
    private int helper(int i, int j, int[] nums, int[][] dp){
        if(dp[i][j] > 0) return dp[i][j];
        for(int x=i; x<= j; x++){
            dp[i][j]= Math.max(dp[i][j],helper(i,x-1,nums,dp) + nums[i -1] * nums[x] * nums[j+1] +helper(x+1,j,nums,dp));
        }
        return dp[i][j];
    }
}
