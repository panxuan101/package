class Solution {
    public int numTriplets(int[] nums1, int[] nums2) {
        return fx(nums1,nums2) + fx(nums2,nums1);
    }
    public int fx(int[] nums1, int[] nums2){
        int res = 0;
        if(nums1.length <2){
            return res;
        }
        Map<Long,Integer> map = new HashMap<>();
        for(int i=0; i<nums1.length - 1; i++){
            for(int j=i+1; j<nums1.length; j++){
                long temp = (long)nums1[i] * (long)nums1[j];
                map.put(temp,map.getOrDefault(temp,0)+1);
            }
        }
        for(int i=0; i<nums2.length; i++){
            long temp = (long)nums2[i] * (long)nums2[i];
            if(map.containsKey(temp)){
                res +=map.get(temp);
            }
        }
        return res;
    }
}
